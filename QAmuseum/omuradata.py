# 大村記念館データ

def data():
    N = 20 # num of spot
    """
    spot = [
        (8000,2300), # 01 入口パネル
        (6000,2300), # 02 顕微鏡メダル
        (5000,0), # 03 瑞宝重光章
        (3000,0), # 04 大村智年譜
        (480,480), # 05 研究業績
        (480,2160), # 06 文化勲章
        (0,4200), # 07 称号記
        (3900,2400), # 08 発酵生産学科写真プレート
        (3200,3800), # 09 卒論
        (2800,5700), # 10 博論
        (940,6200), # 13 化学式模型
        (2600,8000), # 15 いす（ビデオモニタ）
        (2900,10000), # 18 北口キャビン回り
        (5500,6200), # 19 トロフィーなど
        (6500,6200), # 20 昭和時代の写真
        (8000,2350), # 21 座右の銘
        (8400,10500), # 23 徴典館その1
        (11000,6700), # 24 徴典館その2
        (11000,2650), # 25 特別展示コーナー
        (9500,700), # 26 クリスタル科学研究センター
    ]
    """
    time_for_stay = [ # min
        0,  # 00 入口パネル
        1,  # 01 メダル・実験器具
        2,  # 02 瑞宝重光章
        5, # 03 大村智年譜
        3,  # 04 研究業績
        2,  # 05 文化勲章
        2, # 06 称号記
        1,  # 07 発酵生産学科写真プレート
        2,  # 08 卒論
        2,  # 09 博論
        3,  # 10 化学式模型
        6, # 11 ビデオ上映
        3,  # 12 ギャラリー
        1,  # 13 トロフィー
        1,  # 14 来学時の写真
        1,  # 15 座右の銘
        1,  # 16 昭和時代の写真
        2, # 17 徴典館
        1,  # 18 特別展示コーナー
        3, # 19 クリスタル科学研究センター
    ]
    """
    time_for_stay = [ # min
        0,  # 00 入口パネル
        3,  # 01 メダル・実験器具
        2,  # 02 瑞宝重光章
        10, # 03 大村智年譜
        7,  # 04 研究業績
        5,  # 05 文化勲章
        10, # 06 称号記
        2,  # 07 発酵生産学科写真プレート
        8,  # 08 卒論
        8,  # 09 博論
        5,  # 10 化学式模型
        #20, # 11 ビデオ上映
        15,
        3,  # 12 ギャラリー
        3,  # 13 トロフィー
        2,  # 14 来学時の写真
        3,  # 15 座右の銘
        5,  # 16 昭和時代の写真
        10, # 17 徴典館
        3,  # 18 特別展示コーナー
        10, # 19 クリスタル科学研究センター
    ]"""

    satisfaction = [
        0.000, # 00 入口パネル
        4.428, # 01 メダル・実験器具
        4.095, # 02 瑞宝重光章
        3.962, # 03 大村智年譜
        4.000, # 04 研究業績
        4.095, # 05 文化勲章
        3.000, # 06 称号記
        2.000, # 07 発酵生産学科写真プレート
        4.324, # 08 卒論
        4.324, # 09 博論
        3.837, # 10 化学式模型
         # 11 ビデオ上映
        10.500,
        2.705, # 12 ギャラリー
        3.837, # 13 トロフィー
        2.000, # 14 来学時の写真
        4.000, # 15 座右の銘
        3.810, # 16 昭和時代の写真
        3.712, # 17 徴典館
        3.000, # 18 特別展示コーナー
        3.682, # 19 クリスタル科学研究センター
    ]

    time_for_move = [
        [0.00, 0.03, 0.05, 0.07, 0.09, 0.09, 0.10, 0.07, 0.08, 0.10, 0.12, 0.14, 0.17, 0.13, 0.11, 0.10, 0.13, 0.10, 0.07, 0.06], 
        [0.03, 0.00, 0.03, 0.05, 0.07, 0.06, 0.07, 0.04, 0.07, 0.08, 0.10, 0.10, 0.14, 0.13, 0.15, 0.14, 0.15, 0.11, 0.09, 0.07], 
        [0.05, 0.03, 0.00, 0.03, 0.06, 0.06, 0.08, 0.05, 0.06, 0.08, 0.09, 0.11, 0.15, 0.13, 0.16, 0.14, 0.15, 0.13, 0.10, 0.08], 
        [0.07, 0.05, 0.03, 0.00, 0.03, 0.04, 0.06, 0.04, 0.05, 0.07, 0.08, 0.10, 0.13, 0.12, 0.15, 0.15, 0.18, 0.15, 0.13, 0.11], 
        [0.09, 0.07, 0.06, 0.03, 0.00, 0.03, 0.05, 0.05, 0.05, 0.06, 0.07, 0.09, 0.12, 0.11, 0.15, 0.17, 0.18, 0.16, 0.15, 0.12], 
        [0.09, 0.06, 0.06, 0.04, 0.03, 0.00, 0.03, 0.04, 0.04, 0.05, 0.05, 0.08, 0.11, 0.10, 0.13, 0.17, 0.16, 0.15, 0.14, 0.13], 
        [0.10, 0.07, 0.08, 0.06, 0.05, 0.03, 0.00, 0.04, 0.03, 0.03, 0.04, 0.05, 0.09, 0.08, 0.11, 0.12, 0.13, 0.14, 0.15, 0.14], 
        [0.07, 0.04, 0.05, 0.04, 0.05, 0.04, 0.04, 0.00, 0.03, 0.05, 0.06, 0.08, 0.10, 0.10, 0.12, 0.15, 0.15, 0.15, 0.12, 0.10], 
        [0.08, 0.07, 0.06, 0.05, 0.05, 0.04, 0.03, 0.03, 0.00, 0.03, 0.04, 0.06, 0.10, 0.08, 0.11, 0.14, 0.13, 0.12, 0.13, 0.11], 
        [0.10, 0.08, 0.08, 0.07, 0.06, 0.05, 0.03, 0.05, 0.03, 0.00, 0.03, 0.04, 0.07, 0.06, 0.09, 0.10, 0.11, 0.10, 0.14, 0.14], 
        [0.12, 0.10, 0.09, 0.08, 0.07, 0.05, 0.04, 0.06, 0.04, 0.03, 0.00, 0.04, 0.06, 0.06, 0.10, 0.10, 0.10, 0.11, 0.13, 0.15], 
        [0.14, 0.10, 0.11, 0.10, 0.09, 0.08, 0.05, 0.08, 0.06, 0.04, 0.04, 0.00, 0.03, 0.06, 0.09, 0.10, 0.08, 0.09, 0.11, 0.15], 
        [0.17, 0.14, 0.15, 0.13, 0.12, 0.11, 0.09, 0.10, 0.10, 0.07, 0.06, 0.03, 0.00, 0.05, 0.09, 0.11, 0.08, 0.08, 0.11, 0.14], 
        [0.13, 0.13, 0.13, 0.12, 0.11, 0.10, 0.08, 0.10, 0.08, 0.06, 0.06, 0.06, 0.05, 0.00, 0.05, 0.07, 0.08, 0.07, 0.10, 0.13], 
        [0.11, 0.15, 0.16, 0.15, 0.15, 0.13, 0.11, 0.12, 0.11, 0.09, 0.10, 0.09, 0.09, 0.05, 0.00, 0.04, 0.09, 0.05, 0.07, 0.10], 
        [0.10, 0.14, 0.14, 0.15, 0.17, 0.17, 0.12, 0.15, 0.14, 0.10, 0.10, 0.10, 0.11, 0.07, 0.04, 0.00, 0.10, 0.05, 0.07, 0.08], 
        [0.13, 0.15, 0.15, 0.18, 0.18, 0.16, 0.13, 0.15, 0.13, 0.11, 0.10, 0.08, 0.08, 0.08, 0.09, 0.10, 0.00, 0.07, 0.06, 0.09], 
        [0.10, 0.11, 0.13, 0.15, 0.16, 0.15, 0.14, 0.15, 0.12, 0.10, 0.11, 0.09, 0.08, 0.07, 0.05, 0.05, 0.07, 0.00, 0.06, 0.11], 
        [0.07, 0.09, 0.10, 0.13, 0.15, 0.14, 0.15, 0.12, 0.13, 0.14, 0.13, 0.11, 0.11, 0.10, 0.07, 0.07, 0.06, 0.06, 0.00, 0.06], 
        [0.06, 0.07, 0.08, 0.11, 0.12, 0.13, 0.14, 0.10, 0.11, 0.14, 0.15, 0.15, 0.14, 0.13, 0.10, 0.08, 0.09, 0.11, 0.06, 0.00], 
    ]

    return N, time_for_move, time_for_stay, satisfaction

def time_for_move():
    tm=[
        [0.00, 0.03, 0.05, 0.07, 0.09, 0.09, 0.10, 0.07, 0.08, 0.10, 0.12, 0.14, 0.17, 0.13, 0.11, 0.10, 0.13, 0.10, 0.07, 0.06], 
        [0.03, 0.00, 0.03, 0.05, 0.07, 0.06, 0.07, 0.04, 0.07, 0.08, 0.10, 0.10, 0.14, 0.13, 0.15, 0.14, 0.15, 0.11, 0.09, 0.07], 
        [0.05, 0.03, 0.00, 0.03, 0.06, 0.06, 0.08, 0.05, 0.06, 0.08, 0.09, 0.11, 0.15, 0.13, 0.16, 0.14, 0.15, 0.13, 0.10, 0.08], 
        [0.07, 0.05, 0.03, 0.00, 0.03, 0.04, 0.06, 0.04, 0.05, 0.07, 0.08, 0.10, 0.13, 0.12, 0.15, 0.15, 0.18, 0.15, 0.13, 0.11], 
        [0.09, 0.07, 0.06, 0.03, 0.00, 0.03, 0.05, 0.05, 0.05, 0.06, 0.07, 0.09, 0.12, 0.11, 0.15, 0.17, 0.18, 0.16, 0.15, 0.12], 
        [0.09, 0.06, 0.06, 0.04, 0.03, 0.00, 0.03, 0.04, 0.04, 0.05, 0.05, 0.08, 0.11, 0.10, 0.13, 0.17, 0.16, 0.15, 0.14, 0.13], 
        [0.10, 0.07, 0.08, 0.06, 0.05, 0.03, 0.00, 0.04, 0.03, 0.03, 0.04, 0.05, 0.09, 0.08, 0.11, 0.12, 0.13, 0.14, 0.15, 0.14], 
        [0.07, 0.04, 0.05, 0.04, 0.05, 0.04, 0.04, 0.00, 0.03, 0.05, 0.06, 0.08, 0.10, 0.10, 0.12, 0.15, 0.15, 0.15, 0.12, 0.10], 
        [0.08, 0.07, 0.06, 0.05, 0.05, 0.04, 0.03, 0.03, 0.00, 0.03, 0.04, 0.06, 0.10, 0.08, 0.11, 0.14, 0.13, 0.12, 0.13, 0.11], 
        [0.10, 0.08, 0.08, 0.07, 0.06, 0.05, 0.03, 0.05, 0.03, 0.00, 0.03, 0.04, 0.07, 0.06, 0.09, 0.10, 0.11, 0.10, 0.14, 0.14], 
        [0.12, 0.10, 0.09, 0.08, 0.07, 0.05, 0.04, 0.06, 0.04, 0.03, 0.00, 0.04, 0.06, 0.06, 0.10, 0.10, 0.10, 0.11, 0.13, 0.15], 
        [0.14, 0.10, 0.11, 0.10, 0.09, 0.08, 0.05, 0.08, 0.06, 0.04, 0.04, 0.00, 0.03, 0.06, 0.09, 0.10, 0.08, 0.09, 0.11, 0.15], 
        [0.17, 0.14, 0.15, 0.13, 0.12, 0.11, 0.09, 0.10, 0.10, 0.07, 0.06, 0.03, 0.00, 0.05, 0.09, 0.11, 0.08, 0.08, 0.11, 0.14], 
        [0.13, 0.13, 0.13, 0.12, 0.11, 0.10, 0.08, 0.10, 0.08, 0.06, 0.06, 0.06, 0.05, 0.00, 0.05, 0.07, 0.08, 0.07, 0.10, 0.13], 
        [0.11, 0.15, 0.16, 0.15, 0.15, 0.13, 0.11, 0.12, 0.11, 0.09, 0.10, 0.09, 0.09, 0.05, 0.00, 0.04, 0.09, 0.05, 0.07, 0.10], 
        [0.10, 0.14, 0.14, 0.15, 0.17, 0.17, 0.12, 0.15, 0.14, 0.10, 0.10, 0.10, 0.11, 0.07, 0.04, 0.00, 0.10, 0.05, 0.07, 0.08], 
        [0.13, 0.15, 0.15, 0.18, 0.18, 0.16, 0.13, 0.15, 0.13, 0.11, 0.10, 0.08, 0.08, 0.08, 0.09, 0.10, 0.00, 0.07, 0.06, 0.09], 
        [0.10, 0.11, 0.13, 0.15, 0.16, 0.15, 0.14, 0.15, 0.12, 0.10, 0.11, 0.09, 0.08, 0.07, 0.05, 0.05, 0.07, 0.00, 0.06, 0.11], 
        [0.07, 0.09, 0.10, 0.13, 0.15, 0.14, 0.15, 0.12, 0.13, 0.14, 0.13, 0.11, 0.11, 0.10, 0.07, 0.07, 0.06, 0.06, 0.00, 0.06], 
        [0.06, 0.07, 0.08, 0.11, 0.12, 0.13, 0.14, 0.10, 0.11, 0.14, 0.15, 0.15, 0.14, 0.13, 0.10, 0.08, 0.09, 0.11, 0.06, 0.00], 
    ]

    return tm

def time_for_move60():
    tm60=[]
    tm=time_for_move()
    for i in range(20):
        tm60sub=[]
        for j in range(20):
            tm60sub.append(tm[i][j]*8/6)
        tm60.append(tm60sub)
    
    return tm60

def time_for_move100():
    tm100=[]
    tm=time_for_move()
    for i in range(20):
        tm100sub=[]
        for j in range(20):
            tm100sub.append(tm[i][j]*8/10)
        tm100.append(tm100sub)
    return tm100



def time_for_move_calc(t):
    tm_temp=[]
    tm=time_for_move()
    for i in range(20):
        tmsub=[]
        for j in range(20):
            tmsub.append(tm[i][j]*(60/t))
        tm_temp.append(tmsub)
    return tm_temp

def time_stay(d):
    N,spot,stay,satisfaction = data()
    stay_time=[]
    for st in stay:
        stay_time.append(st/d)
    return stay_time


"""
t80=time_for_move()
t60=time_for_move60()
t100=time_for_move100()
print(t80[0][1])
print(t60[0][1])
print(t100[0][1])
"""